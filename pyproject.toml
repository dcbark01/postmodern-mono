[project]
name = "postmodern"
version = "0.1.0"
description = "Example monorepo using uv"
readme = "README.md"
requires-python = ">=3.10"
dependencies = []

[dependency-groups]
dev = [
    "fawltydeps>=0.20.0",
    "pyclean>=3.1.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
    "rust-just>=1.41.0",
    "ty>=0.0.1a12",
]

[tool.uv.workspace]
members = [
    "apps/*",
    "libs/*",
]

[tool.ruff]
target-version = "py310"
line-length = 120
lint.select = [
    "F",      # pyflakes
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "C90",    # mccabe
    "I",      # isort
    "UP",     # pyupgrade
    "A001",   # flake8-builtins (variable shadowing)
    "A002",   # flake8-builtins (argument shadowing)
    "ANN001", # flake8-annotations (function argument)
    "ANN2",   # flake8-annotations (function return)
    "B",      # flake8-bugbear
    "DTZ",    # flake8-datetimez
    # "PTH",  # flake8-use-pathlib
    "PGH004", # pygrep-hooks (blanket noqa)
    "RUF100", # Ruff (unused noqa)
]
lint.ignore = [
    "PTH123", # use Path.open instead of open
]
exclude = [
    "apps/**/baml_*",
    "libs/**/baml_*",
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
known-first-party = ["postmodern"]
length-sort = true
length-sort-straight = true
lines-after-imports = 2
no-lines-before = ["standard-library", "local-folder"]

[tool.coverage.run]
omit = [
    "apps/*/tests/*",
    "libs/*/tests/*",
    "*/__init__.py",
    # exclude code auto-generated by baml from coverage
    "apps/**/baml_client/*",
    "libs/**/baml_client/*",
]

[tool.fawltydeps]
code = [
    "apps",
    "libs",
]
ignore_unused = [
    "postmodern-core",
    "fawltydeps",
    "pyclean",
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "rich",
    "ruff",
    "rust-just",
    "ty",
]

[tool.ty.environment]
root = [
    "./libs",
    "./apps",
]
[tool.ty.src]
exclude = [
    "libs/**/baml_*",
    "apps/**/baml_*",
]

[tool.ty.rules]
unused-ignore-comment = "warn"
redundant-cast = "ignore"
possibly-unbound-import = "error"
